# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from mist_api_v2.models.base_model_ import Model
from mist_api_v2 import util


class AddCloudRequestAllOf(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, title=None, provider=None):  # noqa: E501
        """AddCloudRequestAllOf - a model defined in OpenAPI

        :param title: The title of this AddCloudRequestAllOf.  # noqa: E501
        :type title: str
        :param provider: The provider of this AddCloudRequestAllOf.  # noqa: E501
        :type provider: str
        """
        self.openapi_types = {
            'title': str,
            'provider': str
        }

        self.attribute_map = {
            'title': 'title',
            'provider': 'provider'
        }

        self._title = title
        self._provider = provider

    @classmethod
    def from_dict(cls, dikt) -> 'AddCloudRequestAllOf':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The AddCloudRequest_allOf of this AddCloudRequestAllOf.  # noqa: E501
        :rtype: AddCloudRequestAllOf
        """
        return util.deserialize_model(dikt, cls)

    @property
    def title(self):
        """Gets the title of this AddCloudRequestAllOf.

        The name of the cloud to add  # noqa: E501

        :return: The title of this AddCloudRequestAllOf.
        :rtype: str
        """
        return self._title

    @title.setter
    def title(self, title):
        """Sets the title of this AddCloudRequestAllOf.

        The name of the cloud to add  # noqa: E501

        :param title: The title of this AddCloudRequestAllOf.
        :type title: str
        """

        self._title = title

    @property
    def provider(self):
        """Gets the provider of this AddCloudRequestAllOf.

        The provider of the cloud  # noqa: E501

        :return: The provider of this AddCloudRequestAllOf.
        :rtype: str
        """
        return self._provider

    @provider.setter
    def provider(self, provider):
        """Sets the provider of this AddCloudRequestAllOf.

        The provider of the cloud  # noqa: E501

        :param provider: The provider of this AddCloudRequestAllOf.
        :type provider: str
        """
        allowed_values = ["alibaba", "amazon", "azure", "digitalocean", "equinix", "google", "ibm", "kvm", "kubevirt", "linode", "lxd", "maxihost", "onapp", "openstack", "other", "rackspace", "vcloud", "vsphere", "vultr"]  # noqa: E501
        if provider not in allowed_values:
            raise ValueError(
                "Invalid value for `provider` ({0}), must be one of {1}"
                .format(provider, allowed_values)
            )

        self._provider = provider
