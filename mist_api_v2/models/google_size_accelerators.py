# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from mist_api_v2.models.base_model_ import Model
from mist_api_v2 import util


class GoogleSizeAccelerators(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, accelerator_type=None, accelerator_count=None):  # noqa: E501
        """GoogleSizeAccelerators - a model defined in OpenAPI

        :param accelerator_type: The accelerator_type of this GoogleSizeAccelerators.  # noqa: E501
        :type accelerator_type: str
        :param accelerator_count: The accelerator_count of this GoogleSizeAccelerators.  # noqa: E501
        :type accelerator_count: int
        """
        self.openapi_types = {
            'accelerator_type': str,
            'accelerator_count': int
        }

        self.attribute_map = {
            'accelerator_type': 'accelerator_type',
            'accelerator_count': 'accelerator_count'
        }

        self._accelerator_type = accelerator_type
        self._accelerator_count = accelerator_count

    @classmethod
    def from_dict(cls, dikt) -> 'GoogleSizeAccelerators':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The GoogleSize_accelerators of this GoogleSizeAccelerators.  # noqa: E501
        :rtype: GoogleSizeAccelerators
        """
        return util.deserialize_model(dikt, cls)

    @property
    def accelerator_type(self):
        """Gets the accelerator_type of this GoogleSizeAccelerators.

        Accelerator type to attach to this machine. e.g. 'nvidia-tesla-p100'  # noqa: E501

        :return: The accelerator_type of this GoogleSizeAccelerators.
        :rtype: str
        """
        return self._accelerator_type

    @accelerator_type.setter
    def accelerator_type(self, accelerator_type):
        """Sets the accelerator_type of this GoogleSizeAccelerators.

        Accelerator type to attach to this machine. e.g. 'nvidia-tesla-p100'  # noqa: E501

        :param accelerator_type: The accelerator_type of this GoogleSizeAccelerators.
        :type accelerator_type: str
        """

        self._accelerator_type = accelerator_type

    @property
    def accelerator_count(self):
        """Gets the accelerator_count of this GoogleSizeAccelerators.

        The number of the accelerator cards exposed to this instance  # noqa: E501

        :return: The accelerator_count of this GoogleSizeAccelerators.
        :rtype: int
        """
        return self._accelerator_count

    @accelerator_count.setter
    def accelerator_count(self, accelerator_count):
        """Sets the accelerator_count of this GoogleSizeAccelerators.

        The number of the accelerator cards exposed to this instance  # noqa: E501

        :param accelerator_count: The accelerator_count of this GoogleSizeAccelerators.
        :type accelerator_count: int
        """

        self._accelerator_count = accelerator_count
