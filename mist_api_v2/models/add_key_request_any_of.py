# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from mist_api_v2.models.base_model_ import Model
from mist_api_v2 import util


class AddKeyRequestAnyOf(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, generate=None):  # noqa: E501
        """AddKeyRequestAnyOf - a model defined in OpenAPI

        :param generate: The generate of this AddKeyRequestAnyOf.  # noqa: E501
        :type generate: bool
        """
        self.openapi_types = {
            'generate': bool
        }

        self.attribute_map = {
            'generate': 'generate'
        }

        self._generate = generate

    @classmethod
    def from_dict(cls, dikt) -> 'AddKeyRequestAnyOf':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The AddKeyRequest_anyOf of this AddKeyRequestAnyOf.  # noqa: E501
        :rtype: AddKeyRequestAnyOf
        """
        return util.deserialize_model(dikt, cls)

    @property
    def generate(self):
        """Gets the generate of this AddKeyRequestAnyOf.


        :return: The generate of this AddKeyRequestAnyOf.
        :rtype: bool
        """
        return self._generate

    @generate.setter
    def generate(self, generate):
        """Sets the generate of this AddKeyRequestAnyOf.


        :param generate: The generate of this AddKeyRequestAnyOf.
        :type generate: bool
        """
        allowed_values = [true]  # noqa: E501
        if generate not in allowed_values:
            raise ValueError(
                "Invalid value for `generate` ({0}), must be one of {1}"
                .format(generate, allowed_values)
            )

        self._generate = generate
