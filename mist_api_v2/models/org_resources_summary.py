# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from mist_api_v2.models.base_model_ import Model
from mist_api_v2.models.org_resources_summary_keys import OrgResourcesSummaryKeys
from mist_api_v2 import util

from mist_api_v2.models.org_resources_summary_keys import OrgResourcesSummaryKeys  # noqa: E501

class OrgResourcesSummary(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, keys=None, scripts=None, templates=None, tunnels=None, schedules=None, rules=None, teams=None):  # noqa: E501
        """OrgResourcesSummary - a model defined in OpenAPI

        :param keys: The keys of this OrgResourcesSummary.  # noqa: E501
        :type keys: OrgResourcesSummaryKeys
        :param scripts: The scripts of this OrgResourcesSummary.  # noqa: E501
        :type scripts: OrgResourcesSummaryKeys
        :param templates: The templates of this OrgResourcesSummary.  # noqa: E501
        :type templates: OrgResourcesSummaryKeys
        :param tunnels: The tunnels of this OrgResourcesSummary.  # noqa: E501
        :type tunnels: OrgResourcesSummaryKeys
        :param schedules: The schedules of this OrgResourcesSummary.  # noqa: E501
        :type schedules: OrgResourcesSummaryKeys
        :param rules: The rules of this OrgResourcesSummary.  # noqa: E501
        :type rules: OrgResourcesSummaryKeys
        :param teams: The teams of this OrgResourcesSummary.  # noqa: E501
        :type teams: OrgResourcesSummaryKeys
        """
        self.openapi_types = {
            'keys': OrgResourcesSummaryKeys,
            'scripts': OrgResourcesSummaryKeys,
            'templates': OrgResourcesSummaryKeys,
            'tunnels': OrgResourcesSummaryKeys,
            'schedules': OrgResourcesSummaryKeys,
            'rules': OrgResourcesSummaryKeys,
            'teams': OrgResourcesSummaryKeys
        }

        self.attribute_map = {
            'keys': 'keys',
            'scripts': 'scripts',
            'templates': 'templates',
            'tunnels': 'tunnels',
            'schedules': 'schedules',
            'rules': 'rules',
            'teams': 'teams'
        }

        self._keys = keys
        self._scripts = scripts
        self._templates = templates
        self._tunnels = tunnels
        self._schedules = schedules
        self._rules = rules
        self._teams = teams

    @classmethod
    def from_dict(cls, dikt) -> 'OrgResourcesSummary':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The OrgResourcesSummary of this OrgResourcesSummary.  # noqa: E501
        :rtype: OrgResourcesSummary
        """
        return util.deserialize_model(dikt, cls)

    @property
    def keys(self):
        """Gets the keys of this OrgResourcesSummary.


        :return: The keys of this OrgResourcesSummary.
        :rtype: OrgResourcesSummaryKeys
        """
        return self._keys

    @keys.setter
    def keys(self, keys):
        """Sets the keys of this OrgResourcesSummary.


        :param keys: The keys of this OrgResourcesSummary.
        :type keys: OrgResourcesSummaryKeys
        """

        self._keys = keys

    @property
    def scripts(self):
        """Gets the scripts of this OrgResourcesSummary.


        :return: The scripts of this OrgResourcesSummary.
        :rtype: OrgResourcesSummaryKeys
        """
        return self._scripts

    @scripts.setter
    def scripts(self, scripts):
        """Sets the scripts of this OrgResourcesSummary.


        :param scripts: The scripts of this OrgResourcesSummary.
        :type scripts: OrgResourcesSummaryKeys
        """

        self._scripts = scripts

    @property
    def templates(self):
        """Gets the templates of this OrgResourcesSummary.


        :return: The templates of this OrgResourcesSummary.
        :rtype: OrgResourcesSummaryKeys
        """
        return self._templates

    @templates.setter
    def templates(self, templates):
        """Sets the templates of this OrgResourcesSummary.


        :param templates: The templates of this OrgResourcesSummary.
        :type templates: OrgResourcesSummaryKeys
        """

        self._templates = templates

    @property
    def tunnels(self):
        """Gets the tunnels of this OrgResourcesSummary.


        :return: The tunnels of this OrgResourcesSummary.
        :rtype: OrgResourcesSummaryKeys
        """
        return self._tunnels

    @tunnels.setter
    def tunnels(self, tunnels):
        """Sets the tunnels of this OrgResourcesSummary.


        :param tunnels: The tunnels of this OrgResourcesSummary.
        :type tunnels: OrgResourcesSummaryKeys
        """

        self._tunnels = tunnels

    @property
    def schedules(self):
        """Gets the schedules of this OrgResourcesSummary.


        :return: The schedules of this OrgResourcesSummary.
        :rtype: OrgResourcesSummaryKeys
        """
        return self._schedules

    @schedules.setter
    def schedules(self, schedules):
        """Sets the schedules of this OrgResourcesSummary.


        :param schedules: The schedules of this OrgResourcesSummary.
        :type schedules: OrgResourcesSummaryKeys
        """

        self._schedules = schedules

    @property
    def rules(self):
        """Gets the rules of this OrgResourcesSummary.


        :return: The rules of this OrgResourcesSummary.
        :rtype: OrgResourcesSummaryKeys
        """
        return self._rules

    @rules.setter
    def rules(self, rules):
        """Sets the rules of this OrgResourcesSummary.


        :param rules: The rules of this OrgResourcesSummary.
        :type rules: OrgResourcesSummaryKeys
        """

        self._rules = rules

    @property
    def teams(self):
        """Gets the teams of this OrgResourcesSummary.


        :return: The teams of this OrgResourcesSummary.
        :rtype: OrgResourcesSummaryKeys
        """
        return self._teams

    @teams.setter
    def teams(self, teams):
        """Sets the teams of this OrgResourcesSummary.


        :param teams: The teams of this OrgResourcesSummary.
        :type teams: OrgResourcesSummaryKeys
        """

        self._teams = teams
