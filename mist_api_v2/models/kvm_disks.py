# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from mist_api_v2.models.base_model_ import Model
from mist_api_v2 import util


class KVMDisks(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, disk_size=None, disk_path=None):  # noqa: E501
        """KVMDisks - a model defined in OpenAPI

        :param disk_size: The disk_size of this KVMDisks.  # noqa: E501
        :type disk_size: int
        :param disk_path: The disk_path of this KVMDisks.  # noqa: E501
        :type disk_path: str
        """
        self.openapi_types = {
            'disk_size': int,
            'disk_path': str
        }

        self.attribute_map = {
            'disk_size': 'disk_size',
            'disk_path': 'disk_path'
        }

        self._disk_size = disk_size
        self._disk_path = disk_path

    @classmethod
    def from_dict(cls, dikt) -> 'KVMDisks':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The KVMDisks of this KVMDisks.  # noqa: E501
        :rtype: KVMDisks
        """
        return util.deserialize_model(dikt, cls)

    @property
    def disk_size(self):
        """Gets the disk_size of this KVMDisks.

        The VM's size will be the size of the image plus the number in GBs provided here  # noqa: E501

        :return: The disk_size of this KVMDisks.
        :rtype: int
        """
        return self._disk_size

    @disk_size.setter
    def disk_size(self, disk_size):
        """Sets the disk_size of this KVMDisks.

        The VM's size will be the size of the image plus the number in GBs provided here  # noqa: E501

        :param disk_size: The disk_size of this KVMDisks.
        :type disk_size: int
        """

        self._disk_size = disk_size

    @property
    def disk_path(self):
        """Gets the disk_path of this KVMDisks.

        Where the VM disk file will be created  # noqa: E501

        :return: The disk_path of this KVMDisks.
        :rtype: str
        """
        return self._disk_path

    @disk_path.setter
    def disk_path(self, disk_path):
        """Sets the disk_path of this KVMDisks.

        Where the VM disk file will be created  # noqa: E501

        :param disk_path: The disk_path of this KVMDisks.
        :type disk_path: str
        """

        self._disk_path = disk_path
