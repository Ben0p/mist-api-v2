# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from mist_api_v2.models.base_model_ import Model
from mist_api_v2 import util


class AzureExtra(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, resource_group=None, storage_account=None, user=None, password=None):  # noqa: E501
        """AzureExtra - a model defined in OpenAPI

        :param resource_group: The resource_group of this AzureExtra.  # noqa: E501
        :type resource_group: str
        :param storage_account: The storage_account of this AzureExtra.  # noqa: E501
        :type storage_account: str
        :param user: The user of this AzureExtra.  # noqa: E501
        :type user: str
        :param password: The password of this AzureExtra.  # noqa: E501
        :type password: str
        """
        self.openapi_types = {
            'resource_group': str,
            'storage_account': str,
            'user': str,
            'password': str
        }

        self.attribute_map = {
            'resource_group': 'resource_group',
            'storage_account': 'storage_account',
            'user': 'user',
            'password': 'password'
        }

        self._resource_group = resource_group
        self._storage_account = storage_account
        self._user = user
        self._password = password

    @classmethod
    def from_dict(cls, dikt) -> 'AzureExtra':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The AzureExtra of this AzureExtra.  # noqa: E501
        :rtype: AzureExtra
        """
        return util.deserialize_model(dikt, cls)

    @property
    def resource_group(self):
        """Gets the resource_group of this AzureExtra.

        A new or existing resource group. If not provided a `mist-{location}` resource group will be used.  # noqa: E501

        :return: The resource_group of this AzureExtra.
        :rtype: str
        """
        return self._resource_group

    @resource_group.setter
    def resource_group(self, resource_group):
        """Sets the resource_group of this AzureExtra.

        A new or existing resource group. If not provided a `mist-{location}` resource group will be used.  # noqa: E501

        :param resource_group: The resource_group of this AzureExtra.
        :type resource_group: str
        """

        self._resource_group = resource_group

    @property
    def storage_account(self):
        """Gets the storage_account of this AzureExtra.

        A new or existing storage account. If not provided a `mist-{location}` storage account will be used.  # noqa: E501

        :return: The storage_account of this AzureExtra.
        :rtype: str
        """
        return self._storage_account

    @storage_account.setter
    def storage_account(self, storage_account):
        """Sets the storage_account of this AzureExtra.

        A new or existing storage account. If not provided a `mist-{location}` storage account will be used.  # noqa: E501

        :param storage_account: The storage_account of this AzureExtra.
        :type storage_account: str
        """

        self._storage_account = storage_account

    @property
    def user(self):
        """Gets the user of this AzureExtra.

        The machine username. Defaults to azureuser  # noqa: E501

        :return: The user of this AzureExtra.
        :rtype: str
        """
        return self._user

    @user.setter
    def user(self, user):
        """Sets the user of this AzureExtra.

        The machine username. Defaults to azureuser  # noqa: E501

        :param user: The user of this AzureExtra.
        :type user: str
        """

        self._user = user

    @property
    def password(self):
        """Gets the password of this AzureExtra.

        The machine password. Only used on Microsoft images  # noqa: E501

        :return: The password of this AzureExtra.
        :rtype: str
        """
        return self._password

    @password.setter
    def password(self, password):
        """Sets the password of this AzureExtra.

        The machine password. Only used on Microsoft images  # noqa: E501

        :param password: The password of this AzureExtra.
        :type password: str
        """

        self._password = password
