# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from mist_api_v2.models.base_model_ import Model
from mist_api_v2 import util


class Notification(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, users=None, teams=None, emails=None):  # noqa: E501
        """Notification - a model defined in OpenAPI

        :param users: The users of this Notification.  # noqa: E501
        :type users: List[str]
        :param teams: The teams of this Notification.  # noqa: E501
        :type teams: List[str]
        :param emails: The emails of this Notification.  # noqa: E501
        :type emails: List[str]
        """
        self.openapi_types = {
            'users': List[str],
            'teams': List[str],
            'emails': List[str]
        }

        self.attribute_map = {
            'users': 'users',
            'teams': 'teams',
            'emails': 'emails'
        }

        self._users = users
        self._teams = teams
        self._emails = emails

    @classmethod
    def from_dict(cls, dikt) -> 'Notification':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The Notification of this Notification.  # noqa: E501
        :rtype: Notification
        """
        return util.deserialize_model(dikt, cls)

    @property
    def users(self):
        """Gets the users of this Notification.

        a list of user to be notified, denoted by their UUIDs   # noqa: E501

        :return: The users of this Notification.
        :rtype: List[str]
        """
        return self._users

    @users.setter
    def users(self, users):
        """Sets the users of this Notification.

        a list of user to be notified, denoted by their UUIDs   # noqa: E501

        :param users: The users of this Notification.
        :type users: List[str]
        """

        self._users = users

    @property
    def teams(self):
        """Gets the teams of this Notification.

        a list of teams, denoted by their UUIDs, whose users will be notified   # noqa: E501

        :return: The teams of this Notification.
        :rtype: List[str]
        """
        return self._teams

    @teams.setter
    def teams(self, teams):
        """Sets the teams of this Notification.

        a list of teams, denoted by their UUIDs, whose users will be notified   # noqa: E501

        :param teams: The teams of this Notification.
        :type teams: List[str]
        """

        self._teams = teams

    @property
    def emails(self):
        """Gets the emails of this Notification.

        a list of e-mails to send a notification to   # noqa: E501

        :return: The emails of this Notification.
        :rtype: List[str]
        """
        return self._emails

    @emails.setter
    def emails(self, emails):
        """Sets the emails of this Notification.

        a list of e-mails to send a notification to   # noqa: E501

        :param emails: The emails of this Notification.
        :type emails: List[str]
        """

        self._emails = emails
